{"version":3,"sources":["components/Form/Form.js","components/Phonebook/Phonebook.js","components/Filter/Filter.js","App.js","index.js"],"names":["Form","state","name","number","idName","uuid","idNumber","handleChange","e","target","value","setState","handleSubmit","preventDefault","newContact","id","props","addNewContact","resetForm","this","onSubmit","htmlFor","type","onChange","pattern","title","required","Component","Phonebook","contacts","onDeleteContact","map","onClick","Filter","App","filter","find","contact","alert","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLocaleLowerCase","includes","deleteContact","contactId","findContact","visibleContacts","className","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.876f6406.chunk.js","sourcesContent":["import React from 'react';\nimport { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nexport class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  idName = uuid();\n  idNumber = uuid();\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n      //   [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    const newContact = {\n      name,\n      number,\n      id: uuid(),\n    };\n\n    // const newContact = {\n    //   name: this.state.name,\n    //   number: this.state.number,\n    //   id: uuid(),\n    // };\n\n    this.props.addNewContact(newContact);\n    // this.setState((prevState) => {\n    //   return {\n    //     contacts: [...prevState.contacts, newContact ]\n    //   }\n    // })\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    // this.setState({...this.state});\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.idName}>Name</label>\n        <input\n          id={this.idName}\n          name=\"name\"\n          value={name}\n          type=\"text\"\n          onChange={this.handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n\n        <label htmlFor={this.idNumber}>Number</label>\n        <input\n          id={this.idNumber}\n          name=\"number\"\n          value={number}\n          type=\"text\"\n          onChange={this.handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <button type=\"submit\">Add</button>\n      </form>\n    );\n  }\n}\n\n// export default Form\n","import React from 'react';\nimport './Phonebook.css';\n\nconst Phonebook = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <p>{name}</p>\n        <p>{number}</p>\n        <button onClick={() => onDeleteContact(id)}>Удалить</button>\n      </li>\n    ))}\n  </ul>\n);\n// class Phonebook extends React.Component {\n//   state = {\n\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"Feedback_container\">\n//     //\n//       </div>\n//     );\n//   }\n// }\n\nexport default Phonebook;\n","import React from 'react';\nimport { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input\n      //  id={this.idFilter }\n      name=\"filter\"\n      value={value}\n      type=\"text\"\n      onChange={onChange}\n      //  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      //  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n    />\n  </label>\n);\n\nexport default Filter;\n\n// export class Filter extends Component{\n//   state = {\n//    filter: ''\n//   };\n// idFilter = uuid();\n\n//     handleChange = e => {\n//     const { name, value } = e.target;\n//       this.setState({\n//        [name]: value,\n//       });\n//       console.log(this.state.filter);\n//     //      const {name} =  this.state\n//     // const findContact = {\n//     //   name\n//     // };\n//   // console.log('kjh');\n//       // this.props.filterContacts(value);\n//           this.props.filterContacts(this.state.filter);\n//   };\n\n//     render() {\n//          const { filter} = this.state;\n//       return (<div>\n//           <label>Find contacts by name\n\n//            <input\n//        id={this.idFilter }\n//        name=\"filter\"\n//        value={filter}\n//        type=\"text\"\n//        onChange={this.handleChange}\n//        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//        required\n//        /></label></div>\n//          )\n//      }\n\n// }\n\n// <p>Find contacts by name</p>\n\n//   <label htmlFor={this.idName}>Name</label>\n//       <input\n//         id={this.idName}\n//         name=\"name\"\n//         value={this.state.name}\n//         type=\"text\"\n//         onChange={this.handleChange}\n//         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//         title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//         required\n//       />\n","import React from 'react';\n\nimport './App.css';\n// import { v4 as uuid } from 'uuid';\nimport { Form } from './components/Form/Form';\n// import { Filter } from './components/Filter/Filter';\n// import Feedback from './components/Feedback/Feedback';\nimport Phonebook from './components/Phonebook/Phonebook';\nimport Filter from './components/Filter/Filter';\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    // name: '',\n    // number: '',\n  };\n\n  addNewContact = newContact => {\n    this.state.contacts.find(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} already exists`)\n      : this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, newContact],\n          };\n        });\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n  // filterContacts = filter => {\n\n  //   // console.log('object');\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase())),\n  //   }));\n\n  //   //\n  //   // this.setState(prevState => {\n  //   //   return {\n  //   //     contacts: [...prevState.contacts, newContact],\n  //   //   };\n  //   // });\n  // };\n\n  //  addNewProduct = newContact => {\n  //     this.setState(prevState => {\n  //       return {\n  //         contacts: [...prevState.contacts, newContact],\n  //       };\n  //     });\n  //   };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  findContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n    // console.log(this.state.name, this.state.number);\n\n    return (\n      <div className=\"App\">\n        <Form addNewContact={this.addNewContact} />\n        <Filter value={filter} onChange={this.changeFilter} />\n        {/* <Filter filterContacts={this.filterContacts}/> */}\n        <Phonebook\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       {/* <Feedback /> */}\n//       <Phonebook />\n//     </div>\n//   );\n// }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}